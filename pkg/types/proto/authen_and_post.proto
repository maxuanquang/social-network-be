syntax = "proto3";
option go_package = ".;authen_and_post";
package authen_and_post;

service AuthenticateAndPost {
	// Group: users
	rpc CheckUserAuthentication(UserInfo) returns (UserResult) {}
	rpc CreateUser(UserDetailInfo) returns (UserResult) {}
	rpc EditUser(UserDetailInfo) returns (UserResult) {}

	// Group: friends
	rpc GetUserFollower(UserInfo) returns (UserFollower) {}
	rpc FollowUser(UserAndFollower) returns (ActionResult) {}
	rpc UnfollowUser(UserAndFollower) returns (ActionResult) {}
	// rpc GetUserPost(UserInfo) returns (Post) {} // Pending this API to wait for `group: posts` is implemented

	// Group: posts
	// rpc GetPostDetail(GetPostRequest) returns (Post) {}

	// TODO: Create more APIs
}

message UserInfo {
	int64 user_id = 1;
	string user_name = 2;
	string user_password = 3;
}

message UserDetailInfo {
	int64 user_id = 1;
	string user_name = 2;
	string user_password = 3;
	string first_name = 4;
	string last_name = 5;
	int64 dob = 6;
	string email = 7;
}

enum UserStatus {
	OK = 0;
	NOT_FOUND = 1;
}

enum ActionStatus {
	SUCCEEDED = 0;
	FAILED = 1;
}

message UserResult {
	UserStatus status = 1;
	UserDetailInfo info = 2;
}

message UserFollower {
	repeated UserInfo followers = 1;
}

message UserAndFollower {
	UserInfo user = 1;
	UserInfo follower = 2;
}

message GetPostRequest {
	int64 post_id = 1;
}

message Post {
	int64 post_id = 1;
	int64 user_id = 2;
	string content_text = 3;
	string content_image_path = 4;
	bool visible = 5;
	int64 created_at = 6;
}

message ActionResult {
	ActionStatus status = 1;
}