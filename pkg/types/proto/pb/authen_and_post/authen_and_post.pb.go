// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.12.4
// source: authen_and_post.proto

package authen_and_post

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserStatus int32

const (
	UserStatus_OK        UserStatus = 0
	UserStatus_NOT_FOUND UserStatus = 1
)

// Enum value maps for UserStatus.
var (
	UserStatus_name = map[int32]string{
		0: "OK",
		1: "NOT_FOUND",
	}
	UserStatus_value = map[string]int32{
		"OK":        0,
		"NOT_FOUND": 1,
	}
)

func (x UserStatus) Enum() *UserStatus {
	p := new(UserStatus)
	*p = x
	return p
}

func (x UserStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_authen_and_post_proto_enumTypes[0].Descriptor()
}

func (UserStatus) Type() protoreflect.EnumType {
	return &file_authen_and_post_proto_enumTypes[0]
}

func (x UserStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserStatus.Descriptor instead.
func (UserStatus) EnumDescriptor() ([]byte, []int) {
	return file_authen_and_post_proto_rawDescGZIP(), []int{0}
}

type ActionStatus int32

const (
	ActionStatus_SUCCEEDED ActionStatus = 0
	ActionStatus_FAILED    ActionStatus = 1
)

// Enum value maps for ActionStatus.
var (
	ActionStatus_name = map[int32]string{
		0: "SUCCEEDED",
		1: "FAILED",
	}
	ActionStatus_value = map[string]int32{
		"SUCCEEDED": 0,
		"FAILED":    1,
	}
)

func (x ActionStatus) Enum() *ActionStatus {
	p := new(ActionStatus)
	*p = x
	return p
}

func (x ActionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_authen_and_post_proto_enumTypes[1].Descriptor()
}

func (ActionStatus) Type() protoreflect.EnumType {
	return &file_authen_and_post_proto_enumTypes[1]
}

func (x ActionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActionStatus.Descriptor instead.
func (ActionStatus) EnumDescriptor() ([]byte, []int) {
	return file_authen_and_post_proto_rawDescGZIP(), []int{1}
}

type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserName     string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	UserPassword string `protobuf:"bytes,3,opt,name=user_password,json=userPassword,proto3" json:"user_password,omitempty"`
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authen_and_post_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_authen_and_post_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_authen_and_post_proto_rawDescGZIP(), []int{0}
}

func (x *UserInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserInfo) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UserInfo) GetUserPassword() string {
	if x != nil {
		return x.UserPassword
	}
	return ""
}

type UserDetailInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserName     string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	UserPassword string `protobuf:"bytes,3,opt,name=user_password,json=userPassword,proto3" json:"user_password,omitempty"`
	FirstName    string `protobuf:"bytes,4,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName     string `protobuf:"bytes,5,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Dob          int64  `protobuf:"varint,6,opt,name=dob,proto3" json:"dob,omitempty"`
	Email        string `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *UserDetailInfo) Reset() {
	*x = UserDetailInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authen_and_post_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDetailInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDetailInfo) ProtoMessage() {}

func (x *UserDetailInfo) ProtoReflect() protoreflect.Message {
	mi := &file_authen_and_post_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDetailInfo.ProtoReflect.Descriptor instead.
func (*UserDetailInfo) Descriptor() ([]byte, []int) {
	return file_authen_and_post_proto_rawDescGZIP(), []int{1}
}

func (x *UserDetailInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserDetailInfo) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UserDetailInfo) GetUserPassword() string {
	if x != nil {
		return x.UserPassword
	}
	return ""
}

func (x *UserDetailInfo) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *UserDetailInfo) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *UserDetailInfo) GetDob() int64 {
	if x != nil {
		return x.Dob
	}
	return 0
}

func (x *UserDetailInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type UserResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status UserStatus      `protobuf:"varint,1,opt,name=status,proto3,enum=authen_and_post.UserStatus" json:"status,omitempty"`
	Info   *UserDetailInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *UserResult) Reset() {
	*x = UserResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authen_and_post_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserResult) ProtoMessage() {}

func (x *UserResult) ProtoReflect() protoreflect.Message {
	mi := &file_authen_and_post_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserResult.ProtoReflect.Descriptor instead.
func (*UserResult) Descriptor() ([]byte, []int) {
	return file_authen_and_post_proto_rawDescGZIP(), []int{2}
}

func (x *UserResult) GetStatus() UserStatus {
	if x != nil {
		return x.Status
	}
	return UserStatus_OK
}

func (x *UserResult) GetInfo() *UserDetailInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type UserFollowerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Followers []*UserInfo `protobuf:"bytes,1,rep,name=followers,proto3" json:"followers,omitempty"`
}

func (x *UserFollowerInfo) Reset() {
	*x = UserFollowerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authen_and_post_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFollowerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFollowerInfo) ProtoMessage() {}

func (x *UserFollowerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_authen_and_post_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFollowerInfo.ProtoReflect.Descriptor instead.
func (*UserFollowerInfo) Descriptor() ([]byte, []int) {
	return file_authen_and_post_proto_rawDescGZIP(), []int{3}
}

func (x *UserFollowerInfo) GetFollowers() []*UserInfo {
	if x != nil {
		return x.Followers
	}
	return nil
}

type UserAndFollowerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User     *UserInfo `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Follower *UserInfo `protobuf:"bytes,2,opt,name=follower,proto3" json:"follower,omitempty"`
}

func (x *UserAndFollowerInfo) Reset() {
	*x = UserAndFollowerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authen_and_post_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAndFollowerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAndFollowerInfo) ProtoMessage() {}

func (x *UserAndFollowerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_authen_and_post_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAndFollowerInfo.ProtoReflect.Descriptor instead.
func (*UserAndFollowerInfo) Descriptor() ([]byte, []int) {
	return file_authen_and_post_proto_rawDescGZIP(), []int{4}
}

func (x *UserAndFollowerInfo) GetUser() *UserInfo {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *UserAndFollowerInfo) GetFollower() *UserInfo {
	if x != nil {
		return x.Follower
	}
	return nil
}

type UserPostDetailInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Posts []*PostDetailInfo `protobuf:"bytes,1,rep,name=posts,proto3" json:"posts,omitempty"`
}

func (x *UserPostDetailInfo) Reset() {
	*x = UserPostDetailInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authen_and_post_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPostDetailInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPostDetailInfo) ProtoMessage() {}

func (x *UserPostDetailInfo) ProtoReflect() protoreflect.Message {
	mi := &file_authen_and_post_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPostDetailInfo.ProtoReflect.Descriptor instead.
func (*UserPostDetailInfo) Descriptor() ([]byte, []int) {
	return file_authen_and_post_proto_rawDescGZIP(), []int{5}
}

func (x *UserPostDetailInfo) GetPosts() []*PostDetailInfo {
	if x != nil {
		return x.Posts
	}
	return nil
}

type PostInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId int64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *PostInfo) Reset() {
	*x = PostInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authen_and_post_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostInfo) ProtoMessage() {}

func (x *PostInfo) ProtoReflect() protoreflect.Message {
	mi := &file_authen_and_post_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostInfo.ProtoReflect.Descriptor instead.
func (*PostInfo) Descriptor() ([]byte, []int) {
	return file_authen_and_post_proto_rawDescGZIP(), []int{6}
}

func (x *PostInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PostInfo) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type CommentInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PostId  int64  `protobuf:"varint,2,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	UserId  int64  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Content string `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *CommentInfo) Reset() {
	*x = CommentInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authen_and_post_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentInfo) ProtoMessage() {}

func (x *CommentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_authen_and_post_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentInfo.ProtoReflect.Descriptor instead.
func (*CommentInfo) Descriptor() ([]byte, []int) {
	return file_authen_and_post_proto_rawDescGZIP(), []int{7}
}

func (x *CommentInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CommentInfo) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *CommentInfo) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CommentInfo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type LikeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId int64 `protobuf:"varint,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	UserId int64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *LikeInfo) Reset() {
	*x = LikeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authen_and_post_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeInfo) ProtoMessage() {}

func (x *LikeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_authen_and_post_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeInfo.ProtoReflect.Descriptor instead.
func (*LikeInfo) Descriptor() ([]byte, []int) {
	return file_authen_and_post_proto_rawDescGZIP(), []int{8}
}

func (x *LikeInfo) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *LikeInfo) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type PostDetailInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId           int64          `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ContentText      string         `protobuf:"bytes,3,opt,name=content_text,json=contentText,proto3" json:"content_text,omitempty"`
	ContentImagePath []string       `protobuf:"bytes,4,rep,name=content_image_path,json=contentImagePath,proto3" json:"content_image_path,omitempty"`
	Visible          bool           `protobuf:"varint,5,opt,name=visible,proto3" json:"visible,omitempty"`
	CreatedAt        int64          `protobuf:"varint,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Comments         []*CommentInfo `protobuf:"bytes,7,rep,name=comments,proto3" json:"comments,omitempty"`
	Likes            []*LikeInfo    `protobuf:"bytes,8,rep,name=likes,proto3" json:"likes,omitempty"`
}

func (x *PostDetailInfo) Reset() {
	*x = PostDetailInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authen_and_post_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostDetailInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostDetailInfo) ProtoMessage() {}

func (x *PostDetailInfo) ProtoReflect() protoreflect.Message {
	mi := &file_authen_and_post_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostDetailInfo.ProtoReflect.Descriptor instead.
func (*PostDetailInfo) Descriptor() ([]byte, []int) {
	return file_authen_and_post_proto_rawDescGZIP(), []int{9}
}

func (x *PostDetailInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PostDetailInfo) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PostDetailInfo) GetContentText() string {
	if x != nil {
		return x.ContentText
	}
	return ""
}

func (x *PostDetailInfo) GetContentImagePath() []string {
	if x != nil {
		return x.ContentImagePath
	}
	return nil
}

func (x *PostDetailInfo) GetVisible() bool {
	if x != nil {
		return x.Visible
	}
	return false
}

func (x *PostDetailInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *PostDetailInfo) GetComments() []*CommentInfo {
	if x != nil {
		return x.Comments
	}
	return nil
}

func (x *PostDetailInfo) GetLikes() []*LikeInfo {
	if x != nil {
		return x.Likes
	}
	return nil
}

type ActionResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status ActionStatus `protobuf:"varint,1,opt,name=status,proto3,enum=authen_and_post.ActionStatus" json:"status,omitempty"`
}

func (x *ActionResult) Reset() {
	*x = ActionResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authen_and_post_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionResult) ProtoMessage() {}

func (x *ActionResult) ProtoReflect() protoreflect.Message {
	mi := &file_authen_and_post_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionResult.ProtoReflect.Descriptor instead.
func (*ActionResult) Descriptor() ([]byte, []int) {
	return file_authen_and_post_proto_rawDescGZIP(), []int{10}
}

func (x *ActionResult) GetStatus() ActionStatus {
	if x != nil {
		return x.Status
	}
	return ActionStatus_SUCCEEDED
}

var File_authen_and_post_proto protoreflect.FileDescriptor

var file_authen_and_post_proto_rawDesc = []byte{
	0x0a, 0x15, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x70, 0x6f, 0x73,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x5f,
	0x61, 0x6e, 0x64, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x22, 0x5c, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0xc6, 0x01, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75,
	0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x6f, 0x62, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x64, 0x6f, 0x62, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22,
	0x76, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x33, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x33, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x70, 0x6f,
	0x73, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x4b, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x46,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x37, 0x0a, 0x09, 0x66,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x70, 0x6f, 0x73, 0x74,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x66, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x72, 0x73, 0x22, 0x7b, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6e, 0x64, 0x46,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2d, 0x0a, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x08, 0x66, 0x6f,
	0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x72, 0x22, 0x4b, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x35, 0x0a, 0x05, 0x70, 0x6f, 0x73, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x5f,
	0x61, 0x6e, 0x64, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x22, 0x33,
	0x0a, 0x08, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x69, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x3c,
	0x0a, 0x08, 0x4c, 0x69, 0x6b, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f,
	0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x6f, 0x73,
	0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xae, 0x02, 0x0a,
	0x0e, 0x50, 0x6f, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x78, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x73,
	0x69, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x76, 0x69, 0x73, 0x69,
	0x62, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x38, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x5f, 0x61, 0x6e,
	0x64, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2f, 0x0a, 0x05,
	0x6c, 0x69, 0x6b, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x4c, 0x69,
	0x6b, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x22, 0x45, 0x0a,
	0x0c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x35, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x2a, 0x23, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f,
	0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x2a, 0x29, 0x0a, 0x0c, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x55, 0x43,
	0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c,
	0x45, 0x44, 0x10, 0x01, 0x32, 0x9b, 0x08, 0x0a, 0x13, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x17,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x1a, 0x1b, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x5f, 0x61, 0x6e, 0x64, 0x5f,
	0x70, 0x6f, 0x73, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x00, 0x12, 0x4c, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x1f, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x70, 0x6f, 0x73,
	0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x1a, 0x1b, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x70, 0x6f,
	0x73, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12,
	0x4a, 0x0a, 0x08, 0x45, 0x64, 0x69, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x1b, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x19,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x70, 0x6f, 0x73, 0x74,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x21, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x53,
	0x0a, 0x0a, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x55, 0x73, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x6e, 0x64, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x1a, 0x1d, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x5f, 0x61, 0x6e, 0x64, 0x5f,
	0x70, 0x6f, 0x73, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0c, 0x55, 0x6e, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x5f, 0x61, 0x6e, 0x64,
	0x5f, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6e, 0x64, 0x46, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x1d, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x23, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x5f, 0x61, 0x6e,
	0x64, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0a, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x50, 0x6f, 0x73, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x1d, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x07, 0x47,
	0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x5f,
	0x61, 0x6e, 0x64, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x1a, 0x1f, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x70,
	0x6f, 0x73, 0x74, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x08, 0x45, 0x64, 0x69, 0x74, 0x50, 0x6f, 0x73, 0x74,
	0x12, 0x1f, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x70, 0x6f,
	0x73, 0x74, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x1a, 0x1d, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x70,
	0x6f, 0x73, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x00, 0x12, 0x48, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74,
	0x12, 0x19, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x70, 0x6f,
	0x73, 0x74, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x1d, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0b,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x1d, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x08, 0x4c, 0x69,
	0x6b, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x5f,
	0x61, 0x6e, 0x64, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x1a, 0x1d, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x70,
	0x6f, 0x73, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x00, 0x42, 0x4a, 0x5a, 0x48, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6d, 0x61, 0x78, 0x75, 0x61, 0x6e, 0x71, 0x75, 0x61, 0x6e, 0x67, 0x2f, 0x73, 0x6f, 0x63,
	0x69, 0x61, 0x6c, 0x2d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x70, 0x6b, 0x67, 0x2f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x62, 0x2f, 0x61,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_authen_and_post_proto_rawDescOnce sync.Once
	file_authen_and_post_proto_rawDescData = file_authen_and_post_proto_rawDesc
)

func file_authen_and_post_proto_rawDescGZIP() []byte {
	file_authen_and_post_proto_rawDescOnce.Do(func() {
		file_authen_and_post_proto_rawDescData = protoimpl.X.CompressGZIP(file_authen_and_post_proto_rawDescData)
	})
	return file_authen_and_post_proto_rawDescData
}

var file_authen_and_post_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_authen_and_post_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_authen_and_post_proto_goTypes = []interface{}{
	(UserStatus)(0),             // 0: authen_and_post.UserStatus
	(ActionStatus)(0),           // 1: authen_and_post.ActionStatus
	(*UserInfo)(nil),            // 2: authen_and_post.UserInfo
	(*UserDetailInfo)(nil),      // 3: authen_and_post.UserDetailInfo
	(*UserResult)(nil),          // 4: authen_and_post.UserResult
	(*UserFollowerInfo)(nil),    // 5: authen_and_post.UserFollowerInfo
	(*UserAndFollowerInfo)(nil), // 6: authen_and_post.UserAndFollowerInfo
	(*UserPostDetailInfo)(nil),  // 7: authen_and_post.UserPostDetailInfo
	(*PostInfo)(nil),            // 8: authen_and_post.PostInfo
	(*CommentInfo)(nil),         // 9: authen_and_post.CommentInfo
	(*LikeInfo)(nil),            // 10: authen_and_post.LikeInfo
	(*PostDetailInfo)(nil),      // 11: authen_and_post.PostDetailInfo
	(*ActionResult)(nil),        // 12: authen_and_post.ActionResult
}
var file_authen_and_post_proto_depIdxs = []int32{
	0,  // 0: authen_and_post.UserResult.status:type_name -> authen_and_post.UserStatus
	3,  // 1: authen_and_post.UserResult.info:type_name -> authen_and_post.UserDetailInfo
	2,  // 2: authen_and_post.UserFollowerInfo.followers:type_name -> authen_and_post.UserInfo
	2,  // 3: authen_and_post.UserAndFollowerInfo.user:type_name -> authen_and_post.UserInfo
	2,  // 4: authen_and_post.UserAndFollowerInfo.follower:type_name -> authen_and_post.UserInfo
	11, // 5: authen_and_post.UserPostDetailInfo.posts:type_name -> authen_and_post.PostDetailInfo
	9,  // 6: authen_and_post.PostDetailInfo.comments:type_name -> authen_and_post.CommentInfo
	10, // 7: authen_and_post.PostDetailInfo.likes:type_name -> authen_and_post.LikeInfo
	1,  // 8: authen_and_post.ActionResult.status:type_name -> authen_and_post.ActionStatus
	2,  // 9: authen_and_post.AuthenticateAndPost.CheckUserAuthentication:input_type -> authen_and_post.UserInfo
	3,  // 10: authen_and_post.AuthenticateAndPost.CreateUser:input_type -> authen_and_post.UserDetailInfo
	3,  // 11: authen_and_post.AuthenticateAndPost.EditUser:input_type -> authen_and_post.UserDetailInfo
	2,  // 12: authen_and_post.AuthenticateAndPost.GetUserFollower:input_type -> authen_and_post.UserInfo
	6,  // 13: authen_and_post.AuthenticateAndPost.FollowUser:input_type -> authen_and_post.UserAndFollowerInfo
	6,  // 14: authen_and_post.AuthenticateAndPost.UnfollowUser:input_type -> authen_and_post.UserAndFollowerInfo
	2,  // 15: authen_and_post.AuthenticateAndPost.GetUserPost:input_type -> authen_and_post.UserInfo
	11, // 16: authen_and_post.AuthenticateAndPost.CreatePost:input_type -> authen_and_post.PostDetailInfo
	8,  // 17: authen_and_post.AuthenticateAndPost.GetPost:input_type -> authen_and_post.PostInfo
	11, // 18: authen_and_post.AuthenticateAndPost.EditPost:input_type -> authen_and_post.PostDetailInfo
	8,  // 19: authen_and_post.AuthenticateAndPost.DeletePost:input_type -> authen_and_post.PostInfo
	9,  // 20: authen_and_post.AuthenticateAndPost.CommentPost:input_type -> authen_and_post.CommentInfo
	10, // 21: authen_and_post.AuthenticateAndPost.LikePost:input_type -> authen_and_post.LikeInfo
	4,  // 22: authen_and_post.AuthenticateAndPost.CheckUserAuthentication:output_type -> authen_and_post.UserResult
	4,  // 23: authen_and_post.AuthenticateAndPost.CreateUser:output_type -> authen_and_post.UserResult
	4,  // 24: authen_and_post.AuthenticateAndPost.EditUser:output_type -> authen_and_post.UserResult
	5,  // 25: authen_and_post.AuthenticateAndPost.GetUserFollower:output_type -> authen_and_post.UserFollowerInfo
	12, // 26: authen_and_post.AuthenticateAndPost.FollowUser:output_type -> authen_and_post.ActionResult
	12, // 27: authen_and_post.AuthenticateAndPost.UnfollowUser:output_type -> authen_and_post.ActionResult
	7,  // 28: authen_and_post.AuthenticateAndPost.GetUserPost:output_type -> authen_and_post.UserPostDetailInfo
	12, // 29: authen_and_post.AuthenticateAndPost.CreatePost:output_type -> authen_and_post.ActionResult
	11, // 30: authen_and_post.AuthenticateAndPost.GetPost:output_type -> authen_and_post.PostDetailInfo
	12, // 31: authen_and_post.AuthenticateAndPost.EditPost:output_type -> authen_and_post.ActionResult
	12, // 32: authen_and_post.AuthenticateAndPost.DeletePost:output_type -> authen_and_post.ActionResult
	12, // 33: authen_and_post.AuthenticateAndPost.CommentPost:output_type -> authen_and_post.ActionResult
	12, // 34: authen_and_post.AuthenticateAndPost.LikePost:output_type -> authen_and_post.ActionResult
	22, // [22:35] is the sub-list for method output_type
	9,  // [9:22] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_authen_and_post_proto_init() }
func file_authen_and_post_proto_init() {
	if File_authen_and_post_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_authen_and_post_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authen_and_post_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDetailInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authen_and_post_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authen_and_post_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFollowerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authen_and_post_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAndFollowerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authen_and_post_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPostDetailInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authen_and_post_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authen_and_post_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authen_and_post_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LikeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authen_and_post_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostDetailInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authen_and_post_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_authen_and_post_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_authen_and_post_proto_goTypes,
		DependencyIndexes: file_authen_and_post_proto_depIdxs,
		EnumInfos:         file_authen_and_post_proto_enumTypes,
		MessageInfos:      file_authen_and_post_proto_msgTypes,
	}.Build()
	File_authen_and_post_proto = out.File
	file_authen_and_post_proto_rawDesc = nil
	file_authen_and_post_proto_goTypes = nil
	file_authen_and_post_proto_depIdxs = nil
}
